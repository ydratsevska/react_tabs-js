{"version":3,"sources":["utils/utils.jsx","components/Tabs/Tabs.jsx","App.jsx","index.jsx"],"names":["getActiveTab","object","selectedId","find","tab","id","Tabs","tabs","selectedTabId","onTabSelected","activeTab","className","map","isSelectedTabId","cn","href","onClick","element","title","content","App","useState","setSelectedTabId","ReactDOM","render","document","getElementById"],"mappings":"uNAAaA,EAAe,SAACC,EAAQC,GAGnC,OAFmBD,EAAOE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOH,MAE5BD,EAAO,I,OCAjBK,EAAO,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,cACpCC,EAAYV,EAAaO,EAAMC,GAErC,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKG,UAAU,gBAAf,SACE,6BACGJ,EAAKK,KAAI,SAACR,GACT,IAAMS,EAAkBT,EAAIC,KAAOK,EAAUL,GAO7C,OACE,oBAEEM,UAAWG,IAAG,CAAE,YAAaD,IAC7B,UAAQ,MAHV,SAKE,mBACEE,KAAI,WAAMX,EAAIC,IACd,UAAQ,UACRW,QAAS,kBAfaC,EAeYb,OAdjCS,GACHJ,EAAcQ,IAFS,IAACA,GAYxB,SAKGb,EAAIc,SATFd,EAAIC,WAiBnB,qBAAKM,UAAU,QAAQ,UAAQ,aAA/B,SACGD,EAAUS,cC/BNZ,EAAO,CAClB,CAAEF,GAAI,QAASa,MAAO,QAASC,QAAS,eACxC,CAAEd,GAAI,QAASa,MAAO,QAASC,QAAS,eACxC,CAAEd,GAAI,QAASa,MAAO,QAASC,QAAS,gBAG7BC,EAAM,WACjB,MAA0CC,mBAASd,EAAK,GAAGF,IAA3D,mBAAOG,EAAP,KAAsBc,EAAtB,KAEMZ,EAAYV,EAAaO,EAAMC,GAKrC,OACE,sBAAKG,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBD,EAAUQ,SAGhC,cAAC,EAAD,CACEX,KAAMA,EACNC,cAAeA,EACfC,cAbgB,SAACL,GACrBkB,EAAiBlB,EAAIC,WCfzBkB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.429832cf.chunk.js","sourcesContent":["export const getActiveTab = (object, selectedId) => {\n  const currentTab = object.find(tab => tab.id === selectedId);\n\n  return currentTab || object[0];\n};\n","import cn from 'classnames';\nimport { getActiveTab } from '../../utils/utils';\n\nexport const Tabs = ({ tabs, selectedTabId, onTabSelected }) => {\n  const activeTab = getActiveTab(tabs, selectedTabId);\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab) => {\n            const isSelectedTabId = tab.id === activeTab.id;\n            const handlerSelectedTab = (element) => {\n              if (!isSelectedTabId) {\n                onTabSelected(element);\n              }\n            };\n\n            return (\n              <li\n                key={tab.id}\n                className={cn({ 'is-active': isSelectedTabId })}\n                data-cy=\"Tab\"\n              >\n                <a\n                  href={`#${tab.id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => handlerSelectedTab(tab)}\n                >\n                  {tab.title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {activeTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs/Tabs';\nimport { getActiveTab } from './utils/utils';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n\n  const activeTab = getActiveTab(tabs, selectedTabId);\n  const onTabSelected = (tab) => {\n    setSelectedTabId(tab.id);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${activeTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}